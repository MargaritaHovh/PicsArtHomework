class Vector:
    def __init__(self, x, y):
        self.x = x
        self.y = y
        
    def __neg__(self):
        return Vector(-self.x, -self.y)
        
    def __eq__(self,other):
        return self.x == other.x and self.y == other.y
        
    def __add__(self,other):
        x = self.x + other
        y = self.y + other
        return Vector(x,y)
        
    def __str__(self):
        return f"({self.x},{self.y})"
        
    def __repr__(self):
        return f"Vector({self.x}, {self.y})"
    
    def __contains__(self, item):
        return item == self.x or item == self.y

        
coordinates = Vector(10, 1)
print(coordinates)






class Publication():
    def setData(self, title, price):
        self.title = title
        self.price = price
        
    def getData(self):
        print(f"Title: {self.title}")
        print(f"Price: {self.price}")
        
        
class Book(Publication):
    def setData(self, title, price, count_of_pages):
        super().setData(title, price)
        self.count_of_pages = count_of_pages
        
    def getData(self):
        super().getData()
        print(f"Count of pages: {self.count_of_pages}")
    
class Tape(Publication):
    def setData(self, title, price, playing_time):
        super().setData(title, price)
        self.playing_time = playing_time
        
    def getData(self):
        super().getData()
        print(f"Playing time: {self.playing_time}")
    
book = Book()
book.setData("Adventure", 2500, 344)
book.getData()
print()
tape = Tape()
tape.setData("Fantasy", 4600, 30)
tape.getData()
